[{"/home/trin/develop/ActiveApi/resources/active-api-app/src/index.js":"1","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/config.js":"2","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Router.js":"3","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/index.js":"4","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/LeftMenu.js":"5","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Controller.js":"6","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Welcome.js":"7","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Action.js":"8","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/router.js":"9","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/vars.js":"10","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/app.js":"11","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/request.js":"12","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionExport.js":"13","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionResponse.js":"14","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionRequest.js":"15","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Cube.js":"16","/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/func.js":"17","/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/export.js":"18","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/index.js":"19","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Select.js":"20","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/CheckBox.js":"21","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Boolean.js":"22","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Object.js":"23","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Array.js":"24","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/String.js":"25","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Logo.js":"26","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/HeadMenu.js":"27","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Icon.js":"28","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Highlight.js":"29"},{"size":530,"mtime":1624945369296,"results":"30","hashOfConfig":"31"},{"size":545,"mtime":1624945479814,"results":"32","hashOfConfig":"31"},{"size":1342,"mtime":1624945642332,"results":"33","hashOfConfig":"31"},{"size":1036,"mtime":1606929060000,"results":"34","hashOfConfig":"31"},{"size":1833,"mtime":1624956404332,"results":"35","hashOfConfig":"31"},{"size":2045,"mtime":1624956250898,"results":"36","hashOfConfig":"31"},{"size":2274,"mtime":1624958997311,"results":"37","hashOfConfig":"31"},{"size":5006,"mtime":1624956335171,"results":"38","hashOfConfig":"31"},{"size":775,"mtime":1606162331000,"results":"39","hashOfConfig":"31"},{"size":706,"mtime":1606661794000,"results":"40","hashOfConfig":"31"},{"size":1025,"mtime":1624944801627,"results":"41","hashOfConfig":"31"},{"size":9999,"mtime":1624944785010,"results":"42","hashOfConfig":"31"},{"size":1862,"mtime":1625575905114,"results":"43","hashOfConfig":"31"},{"size":2594,"mtime":1625575847697,"results":"44","hashOfConfig":"31"},{"size":4363,"mtime":1624972885238,"results":"45","hashOfConfig":"31"},{"size":189,"mtime":1606238789000,"results":"46","hashOfConfig":"31"},{"size":531,"mtime":1607030923000,"results":"47","hashOfConfig":"31"},{"size":1774,"mtime":1622642445288,"results":"48","hashOfConfig":"31"},{"size":310,"mtime":1623170787277,"results":"49","hashOfConfig":"31"},{"size":1147,"mtime":1623173269148,"results":"50","hashOfConfig":"31"},{"size":416,"mtime":1623171351239,"results":"51","hashOfConfig":"31"},{"size":614,"mtime":1623172957991,"results":"52","hashOfConfig":"31"},{"size":649,"mtime":1623170353818,"results":"53","hashOfConfig":"31"},{"size":809,"mtime":1623170206755,"results":"54","hashOfConfig":"31"},{"size":440,"mtime":1624957988414,"results":"55","hashOfConfig":"31"},{"size":404,"mtime":1624944754282,"results":"56","hashOfConfig":"31"},{"size":1813,"mtime":1625675460743,"results":"57","hashOfConfig":"31"},{"size":579,"mtime":1624973305006,"results":"58","hashOfConfig":"31"},{"size":807,"mtime":1625576198318,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ou7b31",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/trin/develop/ActiveApi/resources/active-api-app/src/index.js",[],["129","130"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/config.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Router.js",["131","132","133","134"],"import React, { useState, useEffect } from 'react'\nimport {\n\tSwitch,\n\tRoute,\n\tLink,\n\tHashRouter\n} from \"react-router-dom\";\nimport LeftMenu from \"./LeftMenu\";\nimport Welcome from \"../page/Welcome\";\nimport Controller from \"../page/Controller\";\nimport Action from \"../page/Action\";\nimport { inject, observer } from \"mobx-react\";\nimport { message } from \"antd\";\nimport useSound from 'use-sound'\n\nimport notifySound from '../asserts/sound/1.mp3'\nimport HeadMenu from \"./HeadMenu\";\nimport cn from 'classnames'\n\nconst Router = ({ store }) => {\n\n\tconst [playNotify] = useSound(notifySound);\n\n\tuseEffect(() => {\n\t\tstore.app.notification.map(item => {\n\t\t\tmessage.success(item, 5)\n\t\t\tplayNotify()\n\t\t\tstore.app.removeNotifyByText(item)\n\t\t});\n\t}, [store.app.notification])\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div className={cn(['app', { 'day': store.app.nightTheme }])}>\n\t\t\t\t<div className={\"panel\"}>\n\t\t\t\t\t<LeftMenu/>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"content\"}>\n\t\t\t\t\t<HeadMenu/>\n\t\t\t\t\t<div className={\"page\"}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Welcome}/>\n\t\t\t\t\t\t\t<Route path=\"/:group/:version/:controller\" exact component={Controller}/>\n\t\t\t\t\t\t\t<Route path=\"/:group/:version/:controller/:action\" exact component={Action}/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t)\n}\n\nexport default inject('store')(observer(Router));\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/index.js",["135"],"import AppStore from \"./app\";\nimport RouterStore from \"./router\";\nimport VarsStore from \"./vars\";\nimport RequestStore from \"./request\";\nimport {reaction, toJS} from \"mobx\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nclass Store {\n    constructor() {\n        this.app = new AppStore(this)\n        this.router = new RouterStore(this)\n        this.vars = new VarsStore(this)\n        this.request = new RequestStore(this)\n\n        this.loadVars();\n\n        reaction(\n            () => toJS(this.vars.server),\n            async vars => {\n                await AsyncStorage.setItem('@store.vars.server', JSON.stringify(vars))\n            }\n        )\n    }\n\n    loadVars = async () => {\n        const result = await AsyncStorage.getItem('@store.vars.server')\n        const vars = result != null ? JSON.parse(result) : null;\n        if (vars) {\n            Object.entries(vars).map(([key, value]) => {\n                this.vars.add(key, value, {notify: false});\n            })\n        }\n    }\n}\n\nexport default Store\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/LeftMenu.js",["136","137"],"import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport config from '../store/config'\nimport dayjs from \"dayjs\"\nimport { RightOutlined } from '@ant-design/icons'\nimport { inject, observer } from \"mobx-react\"\nimport Logo from \"./Logo\";\n\nconst LeftMenu = ({ store }) => {\n\n\treturn (\n\t\t<>\n\t\t\t<Logo/>\n\t\t\t<ul className={\"left-menu\"}>\n\t\t\t\t<li className={\"item item-info\"}>\n\t\t\t\t\t<Link to={\"/\"} className={store.router.home ? \"active\" : ''}>Информация</Link>\n\t\t\t\t\t<div className={\"generation\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdayjs(config.data.info.generated_at * 1000).format(\"D MMMM, HH:mm\")\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t{\n\t\t\t\t\tconfig.controllerList(store.app.apiGroup, store.app.apiVersion).map(controller => (\n\t\t\t\t\t\t<li className={\"item item-info\"} key={\"left-menu-item-\" + controller.id}>\n\t\t\t\t\t\t\t<Link to={\"/\" + [store.app.apiGroup, store.app.apiVersion, controller.id].join('/')}\n\t\t\t\t\t\t\t\t  className={store.router.controller === controller.id ? \"active\" : \"\"}>{controller.name}</Link>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstore.router.controller === controller.id && (\n\t\t\t\t\t\t\t\t\t<div className={\"action-list\"}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcontroller.action.map(action => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"item\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t key={\"left-menu-item-\" + controller.id + \"-\" + action.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"icon\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RightOutlined/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={\"/\" + [store.app.apiGroup, store.app.apiVersion, controller.id, action.id].join('/')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={[...[\"name\", store.router.action === action.id && \"active\"]].join(\" \")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{action.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport default inject('store')(observer(LeftMenu))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Controller.js",["138"],"import React, { useState, useEffect } from 'react'\nimport config from '../store/config'\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { LockOutlined, UnlockOutlined } from '@ant-design/icons'\nimport { inject, observer } from \"mobx-react\"\n\nimport showdown from 'showdown'\nimport parse from 'html-react-parser'\n\nconst converter = new showdown.Converter({\n\tliteralMidWordUnderscores: true\n})\n\nconst Controller = ({ store }) => {\n\n\tconst location = useLocation()\n\tconst param = useParams()\n\n\tconst [data, setData] = useState(false)\n\n\tuseEffect(() => {\n\t\tstore.router.setAction(false)\n\t\tif (param.controller) {\n\t\t\tif (config.controllerList(store.app.apiGroup, store.app.apiVersion).filter(item => item.id === param.controller).length) {\n\t\t\t\tstore.router.setController(param.controller)\n\t\t\t\tsetData(config.controllerList(store.app.apiGroup, store.app.apiVersion).filter(item => item.id === param.controller)[0])\n\t\t\t}\n\t\t}\n\t}, [location])\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tdata && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={\"controller-info\"}>\n\t\t\t\t\t\t\t<h1>{data.name}</h1>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata.text && (\n\t\t\t\t\t\t\t\t\t<span className={\"quote\"}>\n                                        {parse(converter.makeHtml(data.text.trim()))}\n                                    </span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"controller-action\"}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata.action.map(item => (\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={'/' + [store.app.apiGroup, store.app.apiVersion, store.router.controller, item.id].join('/')}\n\t\t\t\t\t\t\t\t\t\tclassName={\"item\"}\n\t\t\t\t\t\t\t\t\t\tkey={\"action-\" + item.id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div className={\"name\"}>{item.name}</div>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={\"method method-\" + item.method.toLowerCase()}>{item.method}</div>\n\t\t\t\t\t\t\t\t\t\t<div className={\"auth auth-\" + item.auth}>{item.auth ? <LockOutlined/> :\n\t\t\t\t\t\t\t\t\t\t\t<UnlockOutlined/>}</div>\n\t\t\t\t\t\t\t\t\t\t<div className={\"url\"}>{item.url}</div>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default inject('store')(observer(Controller))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Welcome.js",["139"],"import React, { useEffect } from 'react'\nimport config from '../store/config'\nimport { Input } from 'antd';\nimport { LockOutlined, ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Link, useLocation } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\"\n\nconst Welcome = ({ store }) => {\n\n\tconst location = useLocation()\n\n\tuseEffect(() => {\n\t\tstore.router.setHome()\n\t}, [location])\n\n\tconst removeVarHandler = (id) => {\n\t\tstore.vars.remove(id)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>{config.data.info.name}</h1>\n\t\t\t<span className={\"quote\"}>\n\t\t\t\t{config.data.info.text}\n\t\t\t</span>\n\t\t\t<div className={\"list-key-value\"}>\n\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t<div className={\"key\"}>URL</div>\n\t\t\t\t\t<div className={\"value\"}>http://77.244.214.219:8081</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t<div className={\"key\"}>Авторизация</div>\n\t\t\t\t\t<div className={\"value\"}>Authorization: Bearer</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h2>Системные переменные</h2>\n\t\t\t<div className={\"list-key-value\"}>\n\t\t\t\t{\n\t\t\t\t\tconfig.data.variable.map(item => (\n\t\t\t\t\t\t<div className={\"row\"} key={\"server-variable-\" + item.id}>\n\t\t\t\t\t\t\t<div className={\"key\"}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\titem.data.text ? (\n\t\t\t\t\t\t\t\t\t\t<div className={\"info\"}>\n\t\t\t\t\t\t\t\t\t\t\t{item.data.text}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : item.data.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"value value-var\"}>\n\t\t\t\t\t\t\t\t<div className={\"input\"}>\n\t\t\t\t\t\t\t\t\t<Input type={\"text\"}\n\t\t\t\t\t\t\t\t\t\t   value={store.vars.server[item.data.id] ? store.vars.server[item.data.id] : item.data.eval}\n\t\t\t\t\t\t\t\t\t\t   size={\"large\"} prefix={<LockOutlined/>} disabled={true}/>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tstore.vars.server[item.data.id] && (\n\t\t\t\t\t\t\t\t\t\t\t<div class={\"remove\"} onClick={() => removeVarHandler(item.data.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={\"queries\"}>\n\t\t\t\t\t\t\t\t\t<div className={\"item\"}>\n\t\t\t\t\t\t\t\t\t\t<span className={\"icon\"}><ArrowRightOutlined/></span>\n\t\t\t\t\t\t\t\t\t\t<span className={\"text\"}><Link\n\t\t\t\t\t\t\t\t\t\t\tto={\"/\" + item.from.controller + '/' + item.from.action}>{item.from.url}</Link></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default inject('store')(observer(Welcome))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Action.js",["140","141","142"],"import React, { useState, useEffect } from 'react'\nimport config from '../store/config'\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { LockOutlined, ArrowRightOutlined, UnlockOutlined, SendOutlined } from '@ant-design/icons'\nimport { inject, observer } from \"mobx-react\"\nimport { Input, Switch, Tooltip, Tabs, Button } from \"antd\"\nimport ActionRequest from \"./action/ActionRequest\"\nimport ActionExport from \"./action/ActionExport\"\nimport ActionResponse from \"./action/ActionResponse\"\nimport Cube from \"../component/Cube\"\n\nimport showdown from 'showdown'\nimport parse from 'html-react-parser'\n\nconst converter = new showdown.Converter({\n\tliteralMidWordUnderscores: true\n})\n\nconst Action = ({ store }) => {\n\n\tconst location = useLocation()\n\tconst param = useParams()\n\n\tconst [controller, setController] = useState(false)\n\tconst [action, setAction] = useState(false)\n\tconst [fullUrl, setFullUrl] = useState(false)\n\tconst [sendRequestLoad, setSendRequestLoad] = useState(false)\n\tconst [tabState, setTabState] = useState('request')\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keydown', onKeyDown)\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', onKeyDown)\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (store.request.response) {\n\t\t\tsetTabState('response')\n\t\t\tsetSendRequestLoad(false)\n\t\t}\n\t}, [store.request.response])\n\n\tuseEffect(() => {\n\t\tif (param.controller) {\n\t\t\tconst controller = config.controllerList(store.app.apiGroup, store.app.apiVersion).filter(item => item.id === param.controller);\n\t\t\tif (controller.length) {\n\t\t\t\tif (param.action) {\n\t\t\t\t\tif (controller[0].action.filter(item => item.id === param.action).length) {\n\t\t\t\t\t\tloadAction(param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [location])\n\n\tconst loadAction = ({ controller, action }) => {\n\t\tconst controllerData = config.controllerList(store.app.apiGroup, store.app.apiVersion).filter(item => item.id === controller)[0];\n\t\tconst actionData = controllerData.action.filter(item => item.id === action)[0];\n\n\t\tstore.router.setAction(action)\n\t\tstore.router.setController(controller)\n\n\t\tsetTabState('request')\n\t\tsetAction(actionData)\n\t\tsetController(controllerData)\n\n\t\tstore.request.set(actionData)\n\t}\n\n\t//header: {...config.info.header, ...(store.vars.server.token ? {'Authorization': 'Bearer ' + store.vars.server.token} : {})},\n\n\tconst onKeyDown = (e) => {\n\t\tif (e.ctrlKey && e.keyCode === 13) {\n\t\t\tsendRequest()\n\t\t}\n\t}\n\n\tconst sendRequest = () => {\n\t\tstore.request.sendRequest()\n\t\tsetSendRequestLoad(true)\n\t}\n\n\tconst responseTitle = () => {\n\t\tconst status = store.request.response.status\n\t\tconst statusColor = status < 400 ? \"success\" : status < 500 ? \"warning\" : \"error\"\n\n\t\treturn (\n\t\t\t<div className={\"response-tab-header\"}>\n                <span className={\"title\"}>\n                    Ответ\n                </span>\n\t\t\t\t{\n\t\t\t\t\tstore.request.response && (\n\t\t\t\t\t\t<Cube value={status} color={statusColor}/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\taction && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\"/\" + [store.app.apiGroup, store.app.apiVersion, store.router.controller].join('/')}>\n\t\t\t\t\t\t\t\t{controller.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<div className={\"icon\"}>\n\t\t\t\t\t\t\t\t<ArrowRightOutlined/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{action.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taction.text && (\n\t\t\t\t\t\t\t\t<div className={\"quote\"}>\n\t\t\t\t\t\t\t\t\t{parse(converter.makeHtml(action.text))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className={\"request-info\"}>\n\t\t\t\t\t\t\t<div className={\"method method-\" + action.method.toLowerCase()}>{action.method}</div>\n\t\t\t\t\t\t\t<div className={\"url\"}>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title={action.auth && \"Требуется авторизация\"}>\n\t\t\t\t\t\t\t\t\t<Input className={\"auth-\" + action.auth}\n\t\t\t\t\t\t\t\t\t\t   value={fullUrl ? store.request.getFullUrl : store.request.getUrl}\n\t\t\t\t\t\t\t\t\t\t   editable={\"false\"}\n\t\t\t\t\t\t\t\t\t\t   prefix={action.auth ? <LockOutlined/> : <UnlockOutlined/>}/>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"add-base\"} onClick={() => setFullUrl(checked => !checked)}>\n\t\t\t\t\t\t\t\t<Switch size={\"small\"} checked={fullUrl}/>\n\t\t\t\t\t\t\t\t<span>Полный url</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"request\"}>\n\t\t\t\t\t\t\t<Tabs activeKey={tabState} onChange={key => setTabState(key)} className={\"tabs\"}\n\t\t\t\t\t\t\t\t  tabBarExtraContent={<Button size={\"default\"} onClick={sendRequest}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  icon={<SendOutlined/>} size={\"small\"} type={\"primary\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  loading={sendRequestLoad}>Отправить\n\t\t\t\t\t\t\t\t\t  (Ctrl+Enter)</Button>}>\n\t\t\t\t\t\t\t\t<Tabs.TabPane tab=\"Запрос\" key=\"request\">\n\t\t\t\t\t\t\t\t\t<ActionRequest action={action}/>\n\t\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t\t<Tabs.TabPane tab=\"Экспорт\" key=\"export\">\n\t\t\t\t\t\t\t\t\t<ActionExport/>\n\t\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t\t<Tabs.TabPane tab={responseTitle()} key=\"response\" disabled={!store.request.response}>\n\t\t\t\t\t\t\t\t\t<ActionResponse/>\n\t\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default inject('store')(observer(Action))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/router.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/vars.js",["143"],"import {action, makeObservable, observable, runInAction} from \"mobx\";\n\nclass VarsStore {\n\n    server = {}\n\n    constructor(store) {\n        makeObservable(this, {\n            server: observable,\n            add: action,\n            remove: action,\n        })\n        this.store = store\n    }\n\n    add = (name, value, options = {}) => {\n        if (options.notify !== false) {\n            this.store.app.addNotify('Переменная \"' + name + '\" установлена')\n        }\n        this.server[name] = value\n    }\n\n    remove = (name) => {\n        this.store.app.addNotify('Переменная \"' + name + '\" удалена')\n        delete this.server[name]\n    }\n}\n\nexport default VarsStore;\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/app.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/request.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import { makeObservable, observable, action, computed, toJS, runInAction } from \"mobx\";\nimport set from 'lodash/set'\nimport unset from 'lodash/unset'\nimport get from 'lodash/get'\nimport merge from 'lodash/merge'\nimport { flattenObject } from '../utils/func'\nimport config from './config'\nimport axios from \"axios\"\nimport queryString from 'query-string'\n\nclass RequestStore {\n\n\turl = \"\"\n\tmethod = \"GET\"\n\tauth = false\n\tsendAuth = true\n\theader = {}\n\tfield = []\n\tparam = {}\n\tparamStatus = {}\n\tdata = {}\n\tresponse = false\n\tresponseTime = 0\n\n\tconstructor (store) {\n\t\tmakeObservable(this, {\n\t\t\turl: observable,\n\t\t\tmethod: observable,\n\t\t\tauth: observable,\n\t\t\tsendAuth: observable,\n\t\t\theader: observable,\n\t\t\tfield: observable,\n\t\t\tparam: observable,\n\t\t\tparamStatus: observable,\n\t\t\tdata: observable,\n\t\t\tresponse: observable,\n\t\t\tresponseTime: observable,\n\n\t\t\tset: action,\n\t\t\tsetDataValue: action,\n\t\t\taddArrayItem: action,\n\t\t\tremoveArrayItem: action,\n\t\t\tsetParam: action,\n\t\t\tsetParamStatus: action,\n\n\t\t\tdataTemplate: computed,\n\t\t\tfullTemplate: computed,\n\t\t\ttable: computed,\n\t\t\tserialize: computed,\n\t\t\tgetUrl: computed,\n\t\t\tgetFullUrl: computed,\n\t\t})\n\t\tthis.store = store\n\t}\n\n\tset = ({ url, method, auth, header = {}, field, param }) => {\n\t\tthis.url = url\n\t\tthis.method = method\n\t\tthis.auth = auth\n\t\tthis.header = header\n\t\tthis.field = field\n\n\t\tthis.data = {}\n\n\t\tthis.param = {}\n\t\tthis.paramStatus = {}\n\n\t\tparam.map(item => {\n\t\t\tthis.param[item] = ''\n\t\t\tthis.paramStatus[item] = true\n\t\t})\n\n\t\tthis.response = false\n\t}\n\n\tgetDataValue = (id) => {\n\t\treturn get(this.data, id)\n\t}\n\n\tsetDataValue = (id, value) => {\n\t\tif (value === null) {\n\t\t\treturn unset(this.data, id)\n\t\t}\n\t\treturn set(this.data, id, value)\n\t}\n\n\tsetParam = (param, value) => {\n\t\tthis.param = { ...this.param, [param]: value }\n\t}\n\n\tsetParamStatus = (param, status) => {\n\t\tthis.paramStatus = { ...this.paramStatus, [param]: status }\n\t}\n\n\tsendRequest = () => {\n\t\tthis.response = false\n\t\tconst startTime = Date.now()\n\t\taxios({\n\t\t\turl: this.getFullUrl,\n\t\t\tmethod: this.method,\n\t\t\theaders: this.getHeader,\n\t\t\tdata: toJS(this.data)\n\t\t}).then(response => {\n\t\t\tconfig.data.variable.map(vars => {\n\t\t\t\tif (vars.from.url === this.url) {\n\t\t\t\t\tif (vars.data.eval.slice(0, 10) === '@response.') {\n\t\t\t\t\t\tthis.store.vars.add(vars.data.id, vars.data.eval.slice(10).split('.').reduce((o, i) => o[i], response.data))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\trunInAction(() => {\n\t\t\t\tthis.responseTime = Date.now() - startTime\n\t\t\t\tthis.response = response\n\t\t\t})\n\t\t}).catch(error => {\n\t\t\trunInAction(() => {\n\t\t\t\tthis.responseTime = Date.now() - startTime\n\t\t\t\tif (error.response) {\n\t\t\t\t\tthis.response = error.response\n\t\t\t\t} else {\n\t\t\t\t\tthis.response = {\n\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\tstatusText: 'Network error',\n\t\t\t\t\t\terror\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\taddArrayItem = (item) => {\n\t\tconst dot = item.key.split('.')\n\t\tlet template = this.dataTemplate[dot[0]]\n\n\t\tif (!this.data.hasOwnProperty(dot[0])) {\n\t\t\tthis.data[dot[0]] = template\n\t\t}\n\t\tthis.data[dot[0]].push(template[0])\n\t}\n\n\tremoveArrayItem = (item) => {\n\t\tconst dot = item.key.split('.')\n\t\tif (this.data[dot[0]] && this.data[dot[0]].hasOwnProperty(dot[1])) {\n\t\t\tthis.data[dot[0]].splice(dot[1], 1)\n\t\t}\n\t}\n\n\tparseFieldByKey = (result, key, parent = false) => {\n\t\tconst dot = key.split('.')\n\n\t\tif (!result.find(item => item.id === dot[0])) {\n\t\t\tresult.push({ id: dot[0], key })\n\t\t}\n\n\t\tconst item = result.find(item => item.id === dot[0])\n\n\t\tif (dot.length === 1 || (dot[1] !== '*' && dot[1] != parseInt(dot[1]))) {\n\t\t\titem.fillable = true\n\t\t}\n\t\tconsole.log('item', item)\n\t}\n\n\tget dataTemplate () {\n\t\tlet result = {}\n\n\t\tthis.field.map(field => {\n\t\t\tlet defaultNull = null\n\n\t\t\tswitch (field.type) {\n\t\t\t\tcase 'array': {\n\t\t\t\t\tdefaultNull = [null]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfield.id = field.id.replace('.*.', '.0.').replace('.*', '.0')\n\t\t\tresult = set(result, field.id, defaultNull)\n\t\t})\n\n\t\tconsole.log('data template', result)\n\n\t\treturn result\n\t}\n\n\ttablePlaintField (field, key) {\n\t\treturn {\n\t\t\t...field,\n\t\t\t...this.field.find(item => item.id === key),\n\t\t\tfillable: true\n\t\t}\n\t}\n\n\ttableArrayField (field, key, array) {\n\t\tconst result = []\n\t\tarray.map((v, k) => {\n\t\t\tresult.push({\n\t\t\t\t...this.field.find(item => item.id === key),\n\t\t\t\tfillable: true,\n\t\t\t\tid: field.id + '[' + k + ']',\n\t\t\t\tkey: field.key + '.' + k,\n\t\t\t\tindex: k\n\t\t\t})\n\t\t})\n\t\treturn result\n\t}\n\n\tfindFieldDefaults (key) {\n\t\treturn this.field.find(item => {\n\t\t\tif (item.id === key) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tconst possibleKey = key.replace(/\\.[0-9]+\\./, \".0.\").replace(/\\.[0-9]+$/, \".0\")\n\t\t\tif (item.id === possibleKey) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n\n\ttableRecursiveField (key, additional = {}, overwrite = {}) {\n\t\tlet result = {\n\t\t\tkey,\n\t\t\tid: key,\n\t\t\t...additional,\n\t\t\t...this.findFieldDefaults(key),\n\t\t\t...overwrite,\n\t\t\tfillable: false\n\t\t}\n\n\t\t//console.log('field', key, get(this.fullTemplate, key), additional, overwrite)\n\n\t\tif ( // simple field\n\t\t\tget(this.fullTemplate, key) === null ||\n\t\t\ttypeof get(this.fullTemplate, key) !== 'object'\n\t\t) {\n\t\t\tresult.fillable = true\n\t\t} else if ( // array like type=array\n\t\t\tArray.isArray(get(this.fullTemplate, key)) &&\n\t\t\t(get(this.fullTemplate, key)[0] === null || typeof get(this.fullTemplate, key)[0] !== 'object')\n\t\t) {\n\t\t\tconsole.log(key, 'array from array')\n\t\t\tresult.children = []\n\t\t\tget(this.fullTemplate, key).map((v, k) => {\n\t\t\t\tresult.children.push(this.tableRecursiveField(key + '.' + k, {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t}, {\n\t\t\t\t\tname: key + '[' + k + ']',\n\t\t\t\t\tid: key + '[' + k + ']',\n\t\t\t\t\tisArray: true,\n\t\t\t\t\tindex: k\n\t\t\t\t}))\n\t\t\t})\n\t\t} else if ( // array like field.*\n\t\t\tObject.entries(get(this.fullTemplate, key)).length === 1 &&\n\t\t\tget(this.fullTemplate, key).hasOwnProperty('*')\n\t\t) {\n\t\t\tconsole.log(key, 'array from *')\n\t\t\tresult.children = [\n\t\t\t\tthis.tableRecursiveField(key + '.*', {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t}, {\n\t\t\t\t\tname: key + '[0]',\n\t\t\t\t\tid: key + '[0]',\n\t\t\t\t\tisArray: true,\n\t\t\t\t\tindex: 0\n\t\t\t\t})\n\t\t\t]\n\t\t} else { // object\n\t\t\tif (overwrite.isArray) {\n\t\t\t\tresult.type = 'object'\n\t\t\t\tresult.objectWithArray = true\n\t\t\t\tresult.fillable = true\n\t\t\t}\n\t\t\tresult.children = []\n\t\t\tObject.entries(get(this.fullTemplate, key)).map(([v, k]) => {\n\t\t\t\tconsole.log('object', key, v)\n\t\t\t\tresult.children.push(this.tableRecursiveField(key + '.' + v, {\n\t\t\t\t\tid: key + '.' + v,\n\t\t\t\t}, {\n\t\t\t\t\tisArray: v === '*' || parseInt(v) == v\n\t\t\t\t}))\n\t\t\t})\n\t\t}\n\n\t\t//console.log(result)\n\n\t\treturn result\n\t}\n\n\tget fullTemplate () {\n\t\treturn merge({}, this.dataTemplate, toJS(this.data))\n\t}\n\n\tget table () {\n\t\tconst result = []\n\n\t\tObject.entries(this.fullTemplate).map(([key, value], index) => {\n\t\t\tresult.push(this.tableRecursiveField(key))\n\t\t})\n\n\t\t/*\n\t\tconsole.log('template', template)\n\t\tconst tmp = flattenObject(template)\n\n\t\tconsole.log('field', toJS(this.field))\n\n\t\tObject.entries(tmp).map(([key, value], index) => {\n\t\t\tresult.push(this.parseFieldByKey(key))\n\t\t})\n\t\t*/\n\t\treturn result\n\t}\n\n\tget table2 () {\n\t\tconst result = []\n\t\tconst template = merge({}, this.dataTemplate, toJS(this.data))\n\n\t\tconst tmp = flattenObject(template)\n\n\t\tObject.entries(tmp).map(([key, value], index) => {\n\t\t\tconst dot = key.split('.')\n\t\t\tconst item = { ...this.field.find(item => item.id === dot[0]), key }\n\n\t\t\tswitch (dot.length) {\n\t\t\t\tcase 1: {\n\t\t\t\t\tif (item.type === 'array') {\n\t\t\t\t\t\titem.id = item.id + '.0'\n\t\t\t\t\t\titem.key = item.key + '.0'\n\t\t\t\t\t}\n\t\t\t\t\titem.fillable = true\n\t\t\t\t\tresult.push(item)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 2: {\n\t\t\t\t\tif (dot[1] == parseInt(dot[1])) {\n\t\t\t\t\t\titem.id = dot[0] + '[' + parseInt(dot[1]) + ']'\n\t\t\t\t\t\titem.key = dot[0] + '.' + parseInt(dot[1])\n\t\t\t\t\t\titem.index = parseInt(dot[1])\n\t\t\t\t\t\titem.fillable = true\n\n\t\t\t\t\t\tresult.push({ ...item })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!result.filter(i => i.id === dot[0]).length) {\n\t\t\t\t\t\t\tresult.push({ ...item, fillable: false, id: dot[0] })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst original = result.find(i => i.id === dot[0])\n\t\t\t\t\t\tconst sattelit = { ...toJS(this.field.find(i => i.id === (dot[0] + '.' + dot[1]))) }\n\n\t\t\t\t\t\tif (!original.hasOwnProperty('children')) {\n\t\t\t\t\t\t\toriginal.children = []\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toriginal.children.push({\n\t\t\t\t\t\t\t...sattelit,\n\t\t\t\t\t\t\tid: dot[1],\n\t\t\t\t\t\t\tkey: dot[0] + '.' + dot[1],\n\t\t\t\t\t\t\tfillable: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 3: {\n\t\t\t\t\tif (!result.filter(i => i.id === dot[0]).length) {\n\t\t\t\t\t\tresult.push({ ...item, fillable: false, id: dot[0] })\n\t\t\t\t\t}\n\n\t\t\t\t\tconst original = result.find(i => i.id === dot[0])\n\t\t\t\t\tconst sattelit = { ...toJS(this.field.find(i => i.id === (dot[0] + '.0.' + dot[2]))) }\n\n\t\t\t\t\tif (!original.hasOwnProperty('children')) {\n\t\t\t\t\t\toriginal.children = []\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!original.children.hasOwnProperty(dot[1])) {\n\t\t\t\t\t\toriginal.children[parseInt(dot[1])] = {\n\t\t\t\t\t\t\tid: dot[0] + '[' + parseInt(dot[1]) + ']',\n\t\t\t\t\t\t\tkey: dot[0] + '.' + parseInt(dot[1]),\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tobjectWithArray: true,\n\t\t\t\t\t\t\tfillable: true,\n\t\t\t\t\t\t\trules: [],\n\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\tindex: parseInt(dot[1])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('sattelit', sattelit)\n\n\t\t\t\t\toriginal.children[parseInt(dot[1])].children.push({\n\t\t\t\t\t\t...sattelit,\n\t\t\t\t\t\tid: dot[2],\n\t\t\t\t\t\tkey: dot[0] + '.' + parseInt(dot[1]) + '.' + dot[2],\n\t\t\t\t\t\tfillable: true,\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t\treturn result\n\t}\n\n\tget getUrl () {\n\t\tlet url = this.url\n\n\t\tObject.entries(this.paramStatus).map(([key, item]) => {\n\t\t\tif (item && this.param[key] !== '') {\n\t\t\t\turl = url.replace('{' + key + '}', this.param[key])\n\t\t\t}\n\t\t})\n\n\t\tif (this.method.toLowerCase() === 'get') {\n\t\t\tconst query = queryString.stringify(this.data, { arrayFormat: 'bracket' })\n\t\t\tif (query) {\n\t\t\t\turl = url + '?' + query\n\t\t\t}\n\t\t}\n\n\t\treturn url\n\t}\n\n\tget getFullUrl () {\n\t\treturn config.data.info.url + this.getUrl\n\t}\n\n\tget serialize () {\n\t\treturn {\n\t\t\turl: this.getFullUrl,\n\t\t\tmethod: this.method,\n\t\t\theader: this.getHeader,\n\t\t\tdata: toJS(this.data)\n\t\t}\n\t}\n\n\tget getHeader () {\n\t\tconst result = { ...config.data.info.header }\n\n\t\tif (this.auth && this.sendAuth && this.store.vars.server.token) {\n\t\t\tresult['Authorization'] = 'Bearer ' + this.store.vars.server.token\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nexport default RequestStore;\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionExport.js",["159","160","161"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionResponse.js",["162","163"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionRequest.js",["164"],"import React, { useState, useEffect, useRef } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Radio, Input, Switch, Table } from \"antd\"\nimport { InputArray, InputBoolean, InputCheckBox, InputObject, InputSelect, InputString } from \"../../component/Input\"\n\nconst ActionRequest = ({ store, data, action }) => {\n\n\tconst [tableScroll, setTableScroll] = useState({})\n\tconst tableRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (tableRef) {\n\n\t\t\tsetTableScroll({ y: 'calc(100vh - ' + (tableRef.current.getBoundingClientRect()['top'] + 70) + 'px)' });\n\t\t}\n\t}, [tableRef])\n\n\tconst tableColumnIdRender = (text) => {\n\t\treturn <span className={\"id\"}>{text}</span>\n\t}\n\tconst tableColumnTypeRender = (text) => {\n\t\treturn <span className={\"type type-\" + text}>{text}</span>\n\t}\n\tconst tableColumnNameRender = (text) => {\n\t\treturn <span className={\"name\"}>{text}</span>\n\t}\n\tconst tableColumnTextRender = (text, record) => {\n\t\treturn (\n\t\t\t<div className={\"description\"}>\n\t\t\t\t<span>{text}</span>\n\t\t\t\t{\n\t\t\t\t\t(record.rules && record.rules.length) ? (\n\t\t\t\t\t\t<div className={\"validation\"}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trecord.rules.map(item => (\n\t\t\t\t\t\t\t\t\t<span>{item}</span>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : ''\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\tconst tableColumnFormRender = (text, record, index) => {\n\t\tif (!record.fillable) return\n\n\t\tif (record.type === 'array' || (record.isArray && !record.objectWithArray)) {\n\t\t\treturn <InputArray record={record}/>\n\t\t} else if (record.type === 'object' && record.objectWithArray) {\n\t\t\treturn <InputObject record={record}/>\n\t\t} else if (record.type === 'select') {\n\t\t\treturn <InputSelect record={record}/>\n\t\t} else if (record.type === 'checkbox') {\n\t\t\treturn <InputCheckBox record={record}/>\n\t\t} else if (record.type === 'boolean') {\n\t\t\treturn <InputBoolean record={record}/>\n\t\t} else {\n\t\t\treturn <InputString record={record}/>\n\t\t}\n\t}\n\n\tconst requestColumn = [\n\t\t{\n\t\t\ttitle: 'Параметр',\n\t\t\tdataIndex: 'id',\n\t\t\tkey: 'id',\n\t\t\twidth: '20%',\n\t\t\trender: tableColumnIdRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Тип',\n\t\t\tdataIndex: 'type',\n\t\t\tkey: 'type',\n\t\t\twidth: '10%',\n\t\t\trender: tableColumnTypeRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Имя',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t\twidth: '15%',\n\t\t\trender: tableColumnNameRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Описание',\n\t\t\tdataIndex: 'text',\n\t\t\twidth: '35%',\n\t\t\tkey: 'text',\n\t\t\trender: tableColumnTextRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Форма',\n\t\t\tdataIndex: 'form',\n\t\t\tkey: 'form',\n\t\t\twidth: '30%',\n\t\t\trender: tableColumnFormRender,\n\t\t}\n\t]\n\n\n\treturn (\n\t\t<div className={\"action-request-tab\"}>\n\t\t\t{\n\t\t\t\tstore.request.auth && (\n\t\t\t\t\t<div className={\"request-auth\"}>\n\t\t\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t\t\tТокен авторизации\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"input\"}>\n\t\t\t\t\t\t\t<Input disabled={!store.request.sendAuth}\n\t\t\t\t\t\t\t\t   value={store.vars.server.token ? store.vars.server.token : ''}\n\t\t\t\t\t\t\t\t   placeholder={\"Authorization: Bearer\"}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"switch\"}>\n\t\t\t\t\t\t\t<Switch size={\"small\"} checked={store.request.sendAuth}\n\t\t\t\t\t\t\t\t\tonChange={auth => store.request.sendAuth = auth}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\tObject.entries(store.request.param).length ? (\n\t\t\t\t\t<div className={\"request-param\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.entries(store.request.param).map(([item, key]) => (\n\t\t\t\t\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t\t\t\t\t\t${item}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={\"input\"}>\n\t\t\t\t\t\t\t\t\t\t<Input disabled={!store.request.paramStatus[item]}\n\t\t\t\t\t\t\t\t\t\t\t   value={store.request.param[item]}\n\t\t\t\t\t\t\t\t\t\t\t   onInput={text => store.request.setParam(item, text.currentTarget.value)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={\"switch\"}>\n\t\t\t\t\t\t\t\t\t\t<Switch size={\"small\"} checked={store.request.paramStatus[item]}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={disabled => store.request.setParamStatus(item, disabled)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t) : ''\n\t\t\t}\n\t\t\t<div className={\"request-table-wrapper\"} ref={tableRef} style={{ minHeight: tableScroll.y }}>\n\t\t\t\t<Table\n\t\t\t\t\texpandable={{ defaultExpandAllRows: true }}\n\t\t\t\t\tscroll={tableScroll}\n\t\t\t\t\trowKey={record => \"table-row-\" + record.id}\n\t\t\t\t\tsize={\"small\"}\n\t\t\t\t\tpagination={false}\n\t\t\t\t\tclassName={\"request-table\"}\n\t\t\t\t\tcolumns={requestColumn}\n\t\t\t\t\tdataSource={store.request.table}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('store')(observer(ActionRequest))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Cube.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/func.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/export.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/index.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Select.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/CheckBox.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Boolean.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Object.js",["165"],"import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Input } from \"antd\"\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons'\n\nconst InputObject = ({store, record}) => {\n\n\tconst add = <div className={\"add-array\"} onClick={event => store.request.addArrayItem(record)}>\n\t\t<PlusCircleOutlined/> Добавить</div>\n\tconst remove = <div className={\"remove-array\"} onClick={event => store.request.removeArrayItem(record)}>\n\t\t<DeleteOutlined/> Удалить</div>\n\n\treturn (\n\t\t<div className={\"form\"}>\n\t\t\t{record.index ? remove : add}\n\t\t</div>\n\t)\n}\n\nexport default inject('store')(observer(InputObject))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Array.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/String.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Logo.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/HeadMenu.js",["166","167","168","169","170","171"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Icon.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Highlight.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"180","line":5,"column":2,"nodeType":"178","messageId":"179","endLine":5,"endColumn":6},{"ruleId":"181","severity":1,"message":"182","line":25,"column":35,"nodeType":"183","messageId":"184","endLine":25,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":30,"column":5,"nodeType":"187","endLine":30,"endColumn":29,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"182","line":29,"column":53,"nodeType":"183","messageId":"184","endLine":29,"endColumn":55},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"189","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"190","line":29,"column":5,"nodeType":"187","endLine":29,"endColumn":15,"suggestions":"191"},{"ruleId":"185","severity":1,"message":"192","line":14,"column":5,"nodeType":"187","endLine":14,"endColumn":15,"suggestions":"193"},{"ruleId":"185","severity":1,"message":"194","line":35,"column":5,"nodeType":"187","endLine":35,"endColumn":7,"suggestions":"195"},{"ruleId":"185","severity":1,"message":"196","line":55,"column":5,"nodeType":"187","endLine":55,"endColumn":15,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":144,"column":41,"nodeType":"200","messageId":"201","endLine":144,"endColumn":55},{"ruleId":"176","severity":1,"message":"202","line":1,"column":45,"nodeType":"178","messageId":"179","endLine":1,"endColumn":56},{"ruleId":"181","severity":1,"message":"182","line":68,"column":18,"nodeType":"183","messageId":"184","endLine":68,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":104,"column":34,"nodeType":"183","messageId":"184","endLine":104,"endColumn":36},{"ruleId":"203","severity":1,"message":"204","line":158,"column":53,"nodeType":"205","messageId":"206","endLine":158,"endColumn":55},{"ruleId":"181","severity":1,"message":"182","line":167,"column":24,"nodeType":"183","messageId":"184","endLine":167,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":170,"column":4,"nodeType":"209","messageId":"210","endLine":174,"endColumn":5},{"ruleId":"181","severity":1,"message":"182","line":195,"column":20,"nodeType":"183","messageId":"184","endLine":195,"endColumn":22},{"ruleId":"181","severity":1,"message":"211","line":208,"column":31,"nodeType":"183","messageId":"212","endLine":208,"endColumn":33},{"ruleId":"181","severity":1,"message":"182","line":243,"column":43,"nodeType":"183","messageId":"184","endLine":243,"endColumn":45},{"ruleId":"181","severity":1,"message":"182","line":275,"column":61,"nodeType":"183","messageId":"184","endLine":275,"endColumn":63},{"ruleId":"203","severity":1,"message":"213","line":280,"column":40,"nodeType":"205","messageId":"206","endLine":280,"endColumn":42},{"ruleId":"181","severity":1,"message":"182","line":297,"column":63,"nodeType":"183","messageId":"184","endLine":297,"endColumn":65},{"ruleId":"181","severity":1,"message":"182","line":320,"column":49,"nodeType":"183","messageId":"184","endLine":320,"endColumn":51},{"ruleId":"207","severity":1,"message":"208","line":324,"column":4,"nodeType":"209","messageId":"210","endLine":398,"endColumn":5},{"ruleId":"203","severity":1,"message":"213","line":335,"column":17,"nodeType":"205","messageId":"206","endLine":335,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":406,"column":54,"nodeType":"183","messageId":"184","endLine":406,"endColumn":56},{"ruleId":"176","severity":1,"message":"214","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"215","line":3,"column":32,"nodeType":"178","messageId":"179","endLine":3,"endColumn":39},{"ruleId":"185","severity":1,"message":"216","line":34,"column":5,"nodeType":"187","endLine":34,"endColumn":41,"suggestions":"217"},{"ruleId":"176","severity":1,"message":"214","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"215","line":3,"column":17,"nodeType":"178","messageId":"179","endLine":3,"endColumn":24},{"ruleId":"176","severity":1,"message":"218","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"214","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":15},{"ruleId":"176","severity":1,"message":"219","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":10},{"ruleId":"176","severity":1,"message":"220","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":12},{"ruleId":"221","severity":1,"message":"222","line":17,"column":8,"nodeType":"223","endLine":17,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":30,"column":8,"nodeType":"223","endLine":30,"endColumn":57},{"ruleId":"221","severity":1,"message":"222","line":43,"column":6,"nodeType":"223","endLine":43,"endColumn":73},{"ruleId":"221","severity":1,"message":"222","line":51,"column":6,"nodeType":"223","endLine":51,"endColumn":73},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'playNotify' and 'store.app'. Either include them or remove the dependency array.","ArrayExpression",["226"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'param.controller', 'store.app.apiGroup', 'store.app.apiVersion', and 'store.router'. Either include them or remove the dependency array. If 'setData' needs the current value of 'store.app.apiGroup', you can also switch to useReducer instead of useState and read 'store.app.apiGroup' in the reducer.",["227"],"React Hook useEffect has a missing dependency: 'store.router'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'onKeyDown'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'loadAction', 'param', 'store.app.apiGroup', and 'store.app.apiVersion'. Either include them or remove the dependency array.",["230"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'runInAction' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '===' and instead saw '=='.","'Input' is defined but never used.","'message' is defined but never used.","React Hook useEffect has a missing dependency: 'store.request.url'. Either include it or remove the dependency array.",["231"],"'Radio' is defined but never used.","'cn' is defined but never used.","'Icon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [playNotify, store.app, store.app.notification]",{"range":"244","text":"245"},"Update the dependencies array to be: [location, param.controller, store.app.apiGroup, store.app.apiVersion, store.router]",{"range":"246","text":"247"},"Update the dependencies array to be: [location, store.router]",{"range":"248","text":"249"},"Update the dependencies array to be: [onKeyDown]",{"range":"250","text":"251"},"Update the dependencies array to be: [loadAction, location, param, store.app.apiGroup, store.app.apiVersion]",{"range":"252","text":"253"},"Update the dependencies array to be: [langState, store.request.serialize, store.request.url]",{"range":"254","text":"255"},[734,758],"[playNotify, store.app, store.app.notification]",[945,955],"[location, param.controller, store.app.apiGroup, store.app.apiVersion, store.router]",[409,419],"[location, store.router]",[1203,1205],"[onKeyDown]",[1711,1721],"[loadAction, location, param, store.app.apiGroup, store.app.apiVersion]",[833,869],"[langState, store.request.serialize, store.request.url]"]