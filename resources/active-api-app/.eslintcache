[{"/home/trin/develop/ActiveApi/resources/active-api-app/src/index.js":"1","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/config.js":"2","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Router.js":"3","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/index.js":"4","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/LeftMenu.js":"5","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Controller.js":"6","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Welcome.js":"7","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Action.js":"8","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/router.js":"9","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/vars.js":"10","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/app.js":"11","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/request.js":"12","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionExport.js":"13","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionResponse.js":"14","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionRequest.js":"15","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Cube.js":"16","/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/func.js":"17","/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/export.js":"18","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/index.js":"19","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Select.js":"20","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/CheckBox.js":"21","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Boolean.js":"22","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Object.js":"23","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Array.js":"24","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/String.js":"25","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Logo.js":"26","/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/HeadMenu.js":"27"},{"size":591,"mtime":1612498437000,"results":"28","hashOfConfig":"29"},{"size":154,"mtime":1612498597000,"results":"30","hashOfConfig":"29"},{"size":1384,"mtime":1623916355779,"results":"31","hashOfConfig":"29"},{"size":1036,"mtime":1606929060000,"results":"32","hashOfConfig":"29"},{"size":1638,"mtime":1623914342139,"results":"33","hashOfConfig":"29"},{"size":2459,"mtime":1612498640000,"results":"34","hashOfConfig":"29"},{"size":3268,"mtime":1612498644000,"results":"35","hashOfConfig":"29"},{"size":6248,"mtime":1612555435000,"results":"36","hashOfConfig":"29"},{"size":775,"mtime":1606162331000,"results":"37","hashOfConfig":"29"},{"size":706,"mtime":1606661794000,"results":"38","hashOfConfig":"29"},{"size":607,"mtime":1623916334906,"results":"39","hashOfConfig":"29"},{"size":9988,"mtime":1623768138419,"results":"40","hashOfConfig":"29"},{"size":1885,"mtime":1606945266000,"results":"41","hashOfConfig":"29"},{"size":3628,"mtime":1607044402000,"results":"42","hashOfConfig":"29"},{"size":4297,"mtime":1623172105332,"results":"43","hashOfConfig":"29"},{"size":189,"mtime":1606238789000,"results":"44","hashOfConfig":"29"},{"size":531,"mtime":1607030923000,"results":"45","hashOfConfig":"29"},{"size":1774,"mtime":1622642445288,"results":"46","hashOfConfig":"29"},{"size":310,"mtime":1623170787277,"results":"47","hashOfConfig":"29"},{"size":1147,"mtime":1623173269148,"results":"48","hashOfConfig":"29"},{"size":416,"mtime":1623171351239,"results":"49","hashOfConfig":"29"},{"size":614,"mtime":1623172957991,"results":"50","hashOfConfig":"29"},{"size":649,"mtime":1623170353818,"results":"51","hashOfConfig":"29"},{"size":809,"mtime":1623170206755,"results":"52","hashOfConfig":"29"},{"size":438,"mtime":1623170000227,"results":"53","hashOfConfig":"29"},{"size":403,"mtime":1623914738818,"results":"54","hashOfConfig":"29"},{"size":540,"mtime":1624029123953,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wiqc8d",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/trin/develop/ActiveApi/resources/active-api-app/src/index.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/config.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Router.js",["118","119","120","121","122","123","124","125","126"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/index.js",["127"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/LeftMenu.js",["128","129","130"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Controller.js",["131"],"import React, {useState, useEffect} from 'react'\nimport { config } from '../store/config'\nimport {Link, useLocation, useParams} from \"react-router-dom\";\nimport { LockOutlined, UnlockOutlined } from '@ant-design/icons'\nimport { inject, observer } from \"mobx-react\"\n\nimport showdown from 'showdown'\nimport parse from 'html-react-parser'\nconst converter = new showdown.Converter({\n    literalMidWordUnderscores: true\n})\n\nconst Controller = ({store}) => {\n\n    const location = useLocation()\n    const param = useParams()\n\n    const [data, setData] = useState(false)\n\n    useEffect(() => {\n        store.router.setAction(false)\n        if (param.controller) {\n            if (config.controller.filter(item => item.id === param.controller).length) {\n                store.router.setController(param.controller)\n                setData(config.controller.filter(item => item.id === param.controller)[0])\n            }\n        }\n    }, [location])\n\n    return (\n        <>\n            {\n                data && (\n                    <>\n                        <div className={\"controller-info\"}>\n                            <h1>{data.name}</h1>\n                            {\n                                data.text && (\n                                    <span className={\"quote\"}>\n                                        {parse(converter.makeHtml(data.text.trim()))}\n                                    </span>\n                                )\n                            }\n                        </div>\n                        <div className={\"controller-action\"}>\n                            {\n                                data.action.map(item => (\n                                    <Link to={\"/\" + store.router.controller + \"/\" + item.id} className={\"item\"}>\n                                        <div className={\"name\"}>{item.name}</div>\n                                        <div className={\"method method-\" + item.method.toLowerCase()}>{item.method}</div>\n                                        <div className={\"auth auth-\" + item.auth}>{item.auth ? <LockOutlined /> : <UnlockOutlined />}</div>\n                                        <div className={\"url\"}>{item.url}</div>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default inject('store')(observer(Controller))\n",["132","133"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Welcome.js",["134"],"import React, { useEffect } from 'react'\nimport { config } from '../store/config'\nimport { Input } from 'antd';\nimport { LockOutlined, ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Link, useLocation } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\"\n\nconst Welcome = ({ store }) => {\n\n    const location = useLocation()\n\n    useEffect(() => {\n        store.router.setHome()\n    }, [location])\n\n    const removeVarHandler = (id) => {\n        store.vars.remove(id)\n    }\n\n    return (\n        <>\n            <h1>{config.info.name}</h1>\n            <span className={\"quote\"}>\n\t\t\t\t{config.info.text}\n\t\t\t</span>\n            <div className={\"list-key-value\"}>\n                <div className={\"row\"}>\n                    <div className={\"key\"}>URL</div>\n                    <div className={\"value\"}>http://77.244.214.219:8081</div>\n                </div>\n                <div className={\"row\"}>\n                    <div className={\"key\"}>Авторизация</div>\n                    <div className={\"value\"}>Authorization: Bearer</div>\n                </div>\n            </div>\n            <h2>Системные переменные</h2>\n            <div className={\"list-key-value\"}>\n                {\n                    config.variable.map(item => (\n                        <div className={\"row\"} key={\"server-variable-\" + item.id}>\n                            <div className={\"key\"}>\n                                {\n                                    item.data.text ? (\n                                        <div className={\"info\"}>\n                                            {item.data.text}\n                                        </div>\n                                    ) : item.data.name\n                                }\n                            </div>\n                            <div className={\"value value-var\"}>\n                                <div className={\"input\"}>\n                                    <Input type={\"text\"} value={store.vars.server[item.data.id] ? store.vars.server[item.data.id] : item.data.eval} size={\"large\"} prefix={<LockOutlined />} disabled={true} />\n                                    {\n                                        store.vars.server[item.data.id] && (\n                                            <div class={\"remove\"} onClick={() => removeVarHandler(item.data.id)}>\n                                                <DeleteOutlined />\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                                <div className={\"queries\"}>\n                                    <div className={\"item\"}>\n                                        <span className={\"icon\"}><ArrowRightOutlined /></span>\n                                        <span className={\"text\"}><Link to={\"/\" + item.from.controller + '/' + item.from.action}>{item.from.url}</Link></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default inject('store')(observer(Welcome))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/Action.js",["135","136","137"],"import React, { useState, useEffect } from 'react'\nimport { config } from '../store/config'\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { LockOutlined, ArrowRightOutlined, UnlockOutlined, SendOutlined } from '@ant-design/icons'\nimport { inject, observer } from \"mobx-react\"\nimport { Input, Switch, Tooltip, Tabs, Button } from \"antd\"\nimport ActionRequest from \"./action/ActionRequest\"\nimport ActionExport from \"./action/ActionExport\"\nimport ActionResponse from \"./action/ActionResponse\"\nimport Cube from \"../component/Cube\"\n\nimport showdown from 'showdown'\nimport parse from 'html-react-parser'\n\nconst converter = new showdown.Converter({\n    literalMidWordUnderscores: true\n})\n\nconst Action = ({ store }) => {\n\n    const location = useLocation()\n    const param = useParams()\n\n    const [controller, setController] = useState(false)\n    const [action, setAction] = useState(false)\n    const [fullUrl, setFullUrl] = useState(false)\n    const [sendRequestLoad, setSendRequestLoad] = useState(false)\n    const [tabState, setTabState] = useState('request')\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown)\n        return () => {\n            document.removeEventListener('keydown', onKeyDown)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (store.request.response) {\n            setTabState('response')\n            setSendRequestLoad(false)\n        }\n    }, [store.request.response])\n\n    useEffect(() => {\n        if (param.controller) {\n            const controller = config.controller.filter(item => item.id === param.controller);\n            if (controller.length) {\n                if (param.action) {\n                    if (controller[0].action.filter(item => item.id === param.action).length) {\n                        loadAction(param);\n                    }\n                }\n            }\n        }\n    }, [location])\n\n    const loadAction = ({ controller, action }) => {\n        const controllerData = config.controller.filter(item => item.id === controller)[0];\n        const actionData = controllerData.action.filter(item => item.id === action)[0];\n\n        store.router.setAction(action)\n        store.router.setController(controller)\n\n        setTabState('request')\n        setAction(actionData)\n        setController(controllerData)\n\n        store.request.set(actionData)\n    }\n\n    //header: {...config.info.header, ...(store.vars.server.token ? {'Authorization': 'Bearer ' + store.vars.server.token} : {})},\n\n    const onKeyDown = (e) => {\n        if (e.ctrlKey && e.keyCode === 13) {\n            sendRequest()\n        }\n    }\n\n    const sendRequest = () => {\n        store.request.sendRequest()\n        setSendRequestLoad(true)\n    }\n\n    const responseTitle = () => {\n        const status = store.request.response.status\n        const statusColor = status < 400 ? \"success\" : status < 500 ? \"warning\" : \"error\"\n\n        return (\n            <div className={\"response-tab-header\"}>\n                <span className={\"title\"}>\n                    Ответ\n                </span>\n                {\n                    store.request.response && (\n                        <Cube value={status} color={statusColor} />\n                    )\n                }\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {\n                action && (\n                    <>\n                        <h1>\n                            <Link to={\"/\" + store.router.controller}>\n                                {controller.name}\n                            </Link>\n                            <div className={\"icon\"}>\n                                <ArrowRightOutlined />\n                            </div>\n                            <div>\n                                {action.name}\n                            </div>\n                        </h1>\n                        {\n                            action.text && (\n                                <div className={\"quote\"}>\n                                    {parse(converter.makeHtml(action.text))}\n                                </div>\n                            )\n                        }\n                        <div className={\"request-info\"}>\n                            <div className={\"method method-\" + action.method.toLowerCase()}>{action.method}</div>\n                            <div className={\"url\"}>\n                                <Tooltip placement=\"topLeft\" title={action.auth && \"Требуется авторизация\"}>\n                                    <Input className={\"auth-\" + action.auth} value={fullUrl ? store.request.getFullUrl : store.request.getUrl} editable={\"false\"} prefix={action.auth ? <LockOutlined /> : <UnlockOutlined />} />\n                                </Tooltip>\n                            </div>\n                            <div className={\"add-base\"} onClick={() => setFullUrl(checked => !checked)}>\n                                <Switch size={\"small\"} checked={fullUrl} />\n                                <span>Полный url</span>\n                            </div>\n                        </div>\n                        <div className={\"request\"}>\n                            <Tabs activeKey={tabState} onChange={key => setTabState(key)} className={\"tabs\"} tabBarExtraContent={<Button size={\"default\"} onClick={sendRequest} icon={<SendOutlined />} size={\"small\"} type={\"primary\"} loading={sendRequestLoad}>Отправить (Ctrl+Enter)</Button>}>\n                                <Tabs.TabPane tab=\"Запрос\" key=\"request\">\n                                    <ActionRequest action={action} />\n                                </Tabs.TabPane>\n                                <Tabs.TabPane tab=\"Экспорт\" key=\"export\">\n                                    <ActionExport />\n                                </Tabs.TabPane>\n                                <Tabs.TabPane tab={responseTitle()} key=\"response\" disabled={!store.request.response}>\n                                    <ActionResponse />\n                                </Tabs.TabPane>\n                            </Tabs>\n                        </div>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default inject('store')(observer(Action))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/store/router.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/vars.js",["138"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/app.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/store/request.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionExport.js",["154","155","156"],"import React, {useState, useEffect} from 'react'\nimport {inject, observer} from 'mobx-react'\nimport {Input, Radio, Button, message} from \"antd\"\nimport { CopyOutlined } from '@ant-design/icons'\nimport Cube from \"../../component/Cube\"\nimport Export from \"../../utils/export\"\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport Highlight from 'react-highlight.js'\nimport 'highlight.js/styles/github.css'\n\nconst exportType = [\n\t{\n\t\tid: \"fetch\",\n\t\tname: \"fetch\",\n\t\tcube: \"JS\",\n\t\tlang: \"javascript\"\n\t},\n\t{\n\t\tid: \"curl\",\n\t\tname: \"cURL\",\n\t\tcube: \"#\",\n\t\tlang: \"bash\"\n\t}\n]\n\nconst ActionExport = ({store}) => {\n\n\tconst [textarea, setTextarea] = useState('')\n\tconst [langState, setLangState] = useState(exportType[0].id)\n\n\tuseEffect(() => {\n\t\tif (store.request.url) {\n\t\t\tsetTextarea(Export.convert(langState, store.request.serialize))\n\t\t}\n\t}, [langState, store.request.serialize])\n\n\tconst copyHandler = () => {\n\t\tstore.app.addNotify('Данные скопированы')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={\"request-export\"}>\n\t\t\t\t<div className={\"request-tabs\"}>\n\t\t\t\t\t<Radio.Group value={langState} buttonStyle={\"solid\"} onChange={event => setLangState(event.target.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\texportType.map(item => (\n\t\t\t\t\t\t\t\t<Radio.Button value={item.id} key={\"export-lang-\" + item.id}>\n\t\t\t\t\t\t\t\t\t<Cube value={item.cube} />\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\n\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t<div className={\"request-copy\"}>\n\t\t\t\t\t\t<CopyToClipboard text={textarea} onCopy={copyHandler}>\n\t\t\t\t\t\t\t<Button size={\"small\"} icon={<CopyOutlined />}>\n\t\t\t\t\t\t\t\tСкопировать\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Highlight language={exportType.filter(item => item.id === langState)[0].lang}>\n\t\t\t\t\t{textarea}\n\t\t\t\t</Highlight>\n\t\t\t</div>\n        </>\n\t)\n}\n\nexport default inject('store')(observer(ActionExport));\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionResponse.js",["157","158"],"import React, {useState, useEffect} from 'react'\nimport {inject, observer} from 'mobx-react'\nimport {Input, message, Radio, Button} from \"antd\"\nimport { CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\"\nimport Highlight from 'react-highlight.js'\nimport 'highlight.js/styles/github.css'\n\nconst ActionResponse = ({store}) => {\n\n    const [textarea, setTextarea] = useState(null)\n    const [respState, setRespState] = useState(\"pretty\")\n\n    useEffect(() => {\n        if (store.request.response && store.request.response.data) {\n            setTextarea(JSON.stringify(store.request.response.data, null, 4))\n        } else {\n            setTextarea(JSON.stringify(store.request.response, null, 4))\n        }\n\n    }, [respState, store.request.response])\n\n    const copyHandler = () => {\n        store.app.addNotify('Данные скопированы')\n    }\n\n\treturn (\n        <>\n            <div className={\"request-response\"}>\n                <div className={\"request-data\"}>\n                    <div className={\"request-tabs\"}>\n                        <Radio.Group value={respState} buttonStyle={\"solid\"} onChange={event => setRespState(event.target.value)}>\n                            <Radio.Button value={\"pretty\"}>\n                                <span>Pretty</span>\n                            </Radio.Button>\n                        </Radio.Group>\n                        <div className={\"request-copy\"}>\n                            <CopyToClipboard text={textarea} onCopy={copyHandler}>\n                                <Button size={\"small\"} icon={<CopyOutlined />}>\n                                    Скопировать\n                                </Button>\n                            </CopyToClipboard>\n                        </div>\n                    </div>\n                    <Highlight language={\"json\"}>\n                        {textarea}\n                    </Highlight>\n                </div>\n                <div className={\"response-info\"}>\n                    <div className={\"list-key-value\"}>\n                        <div className={\"row\"}>\n                            <div className={\"key\"}>Время выполнения</div>\n                            <div className={\"value\"}>{store.request.responseTime / 1000} сек.</div>\n                        </div>\n                        <div className={\"row\"}>\n                            <div className={\"key\"}>Ответ</div>\n                            <div className={\"value\"}>{store.request.response.status} {store.request.response.statusText}</div>\n                        </div>\n                        {\n                            store.request.response.headers && Object.entries(store.request.response.headers).length && (\n                                <div className={\"row\"}>\n                                    <div className={\"key\"}>Заголовки</div>\n                                    <div className={\"value\"}>\n                                        {\n                                            Object.entries(store.request.response.headers).map(value => (\n                                                <div>{value[0].charAt(0).toUpperCase() + value[0].slice(1)}: {value[1]}</div>\n                                            ))\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n\t)\n}\n\nexport default inject('store')(observer(ActionResponse));\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/page/action/ActionRequest.js",["159"],"import React, { useState, useEffect, useRef } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Radio, Input, Switch, Table } from \"antd\"\nimport { InputArray, InputBoolean, InputCheckBox, InputObject, InputSelect, InputString } from \"../../component/Input\"\n\nconst ActionRequest = ({ store, data, action }) => {\n\n\tconst [tableScroll, setTableScroll] = useState({})\n\tconst tableRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (tableRef) {\n\t\t\tsetTableScroll({ y: 'calc(100vh - ' + (tableRef.current.getBoundingClientRect()['top'] + 100) + 'px)' });\n\t\t}\n\t}, [tableRef])\n\n\tconst tableColumnIdRender = (text) => {\n\t\treturn <span className={\"id\"}>{text}</span>\n\t}\n\tconst tableColumnTypeRender = (text) => {\n\t\treturn <span className={\"type type-\" + text}>{text}</span>\n\t}\n\tconst tableColumnNameRender = (text) => {\n\t\treturn <span className={\"name\"}>{text}</span>\n\t}\n\tconst tableColumnTextRender = (text, record) => {\n\t\treturn (\n\t\t\t<div className={\"description\"}>\n\t\t\t\t<span>{text}</span>\n\t\t\t\t{\n\t\t\t\t\t(record.rules && record.rules.length) ? (\n\t\t\t\t\t\t<div className={\"validation\"}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trecord.rules.map(item => (\n\t\t\t\t\t\t\t\t\t<span>{item}</span>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : ''\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\tconst tableColumnFormRender = (text, record, index) => {\n\t\tif (!record.fillable) return\n\n\t\tif (record.type === 'array' || (record.isArray && !record.objectWithArray)) {\n\t\t\treturn <InputArray record={record}/>\n\t\t} else if (record.type === 'object' && record.objectWithArray) {\n\t\t\treturn <InputObject record={record}/>\n\t\t} else if (record.type === 'select') {\n\t\t\treturn <InputSelect record={record}/>\n\t\t} else if (record.type === 'checkbox') {\n\t\t\treturn <InputCheckBox record={record}/>\n\t\t} else if (record.type === 'boolean') {\n\t\t\treturn <InputBoolean record={record}/>\n\t\t} else {\n\t\t\treturn <InputString record={record}/>\n\t\t}\n\t}\n\n\tconst requestColumn = [\n\t\t{\n\t\t\ttitle: 'Параметр',\n\t\t\tdataIndex: 'id',\n\t\t\tkey: 'id',\n\t\t\twidth: '20%',\n\t\t\trender: tableColumnIdRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Тип',\n\t\t\tdataIndex: 'type',\n\t\t\tkey: 'type',\n\t\t\twidth: '10%',\n\t\t\trender: tableColumnTypeRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Имя',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t\twidth: '15%',\n\t\t\trender: tableColumnNameRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Описание',\n\t\t\tdataIndex: 'text',\n\t\t\twidth: '35%',\n\t\t\tkey: 'text',\n\t\t\trender: tableColumnTextRender,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Форма',\n\t\t\tdataIndex: 'form',\n\t\t\tkey: 'form',\n\t\t\twidth: '30%',\n\t\t\trender: tableColumnFormRender,\n\t\t}\n\t]\n\n\treturn (\n\t\t<div className={\"action-request-tab\"}>\n\t\t\t{\n\t\t\t\tstore.request.auth && (\n\t\t\t\t\t<div className={\"request-auth\"}>\n\t\t\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t\t\tТокен авторизации\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"input\"}>\n\t\t\t\t\t\t\t<Input disabled={!store.request.sendAuth}\n\t\t\t\t\t\t\t\t   value={store.vars.server.token ? store.vars.server.token : ''}\n\t\t\t\t\t\t\t\t   placeholder={\"Authorization: Bearer\"}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"switch\"}>\n\t\t\t\t\t\t\t<Switch size={\"small\"} checked={store.request.sendAuth}\n\t\t\t\t\t\t\t\t\tonChange={auth => store.request.sendAuth = auth}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\tObject.entries(store.request.param).length ? (\n\t\t\t\t\t<div className={\"request-param\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.entries(store.request.param).map(([item, key]) => (\n\t\t\t\t\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t\t\t\t\t\t${item}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={\"input\"}>\n\t\t\t\t\t\t\t\t\t\t<Input disabled={!store.request.paramStatus[item]}\n\t\t\t\t\t\t\t\t\t\t\t   value={store.request.param[item]}\n\t\t\t\t\t\t\t\t\t\t\t   onInput={text => store.request.setParam(item, text.currentTarget.value)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={\"switch\"}>\n\t\t\t\t\t\t\t\t\t\t<Switch size={\"small\"} checked={store.request.paramStatus[item]}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={disabled => store.request.setParamStatus(item, disabled)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t) : ''\n\t\t\t}\n\t\t\t<div className={\"request-table-wrapper\"} ref={tableRef}>\n\t\t\t\t<Table expandable={{ defaultExpandAllRows: true }} scroll={tableScroll}\n\t\t\t\t\t   rowKey={record => \"table-row-\" + record.id} size={\"small\"} pagination={false}\n\t\t\t\t\t   className={\"request-table\"} columns={requestColumn} dataSource={store.request.table}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('store')(observer(ActionRequest));\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Cube.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/func.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/utils/export.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/index.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Select.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/CheckBox.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Boolean.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Object.js",["160"],"import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Input } from \"antd\"\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons'\n\nconst InputObject = ({store, record}) => {\n\n\tconst add = <div className={\"add-array\"} onClick={event => store.request.addArrayItem(record)}>\n\t\t<PlusCircleOutlined/> Добавить</div>\n\tconst remove = <div className={\"remove-array\"} onClick={event => store.request.removeArrayItem(record)}>\n\t\t<DeleteOutlined/> Удалить</div>\n\n\treturn (\n\t\t<div className={\"form\"}>\n\t\t\t{record.index ? remove : add}\n\t\t</div>\n\t)\n}\n\nexport default inject('store')(observer(InputObject))\n","/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/Array.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/component/Input/String.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/Logo.js",[],"/home/trin/develop/ActiveApi/resources/active-api-app/src/nav/HeadMenu.js",[],{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"165","line":3,"column":2,"nodeType":"163","messageId":"164","endLine":3,"endColumn":8},{"ruleId":"161","severity":1,"message":"166","line":4,"column":2,"nodeType":"163","messageId":"164","endLine":4,"endColumn":7},{"ruleId":"161","severity":1,"message":"167","line":5,"column":2,"nodeType":"163","messageId":"164","endLine":5,"endColumn":6},{"ruleId":"161","severity":1,"message":"168","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":15},{"ruleId":"161","severity":1,"message":"169","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":18},{"ruleId":"161","severity":1,"message":"170","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":25,"column":35,"nodeType":"173","messageId":"174","endLine":25,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":30,"column":5,"nodeType":"177","endLine":30,"endColumn":29,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"172","line":29,"column":53,"nodeType":"173","messageId":"174","endLine":29,"endColumn":55},{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"179","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"180","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":23},{"ruleId":"175","severity":1,"message":"181","line":28,"column":8,"nodeType":"177","endLine":28,"endColumn":18,"suggestions":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"175","severity":1,"message":"187","line":14,"column":8,"nodeType":"177","endLine":14,"endColumn":18,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":35,"column":8,"nodeType":"177","endLine":35,"endColumn":10,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"191","line":55,"column":8,"nodeType":"177","endLine":55,"endColumn":18,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":138,"column":201,"nodeType":"195","messageId":"196","endLine":138,"endColumn":215},{"ruleId":"161","severity":1,"message":"197","line":1,"column":45,"nodeType":"163","messageId":"164","endLine":1,"endColumn":56},{"ruleId":"171","severity":1,"message":"172","line":68,"column":18,"nodeType":"173","messageId":"174","endLine":68,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":104,"column":29,"nodeType":"173","messageId":"174","endLine":104,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":158,"column":53,"nodeType":"200","messageId":"201","endLine":158,"endColumn":55},{"ruleId":"171","severity":1,"message":"172","line":167,"column":24,"nodeType":"173","messageId":"174","endLine":167,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":170,"column":4,"nodeType":"204","messageId":"205","endLine":174,"endColumn":5},{"ruleId":"171","severity":1,"message":"172","line":195,"column":20,"nodeType":"173","messageId":"174","endLine":195,"endColumn":22},{"ruleId":"171","severity":1,"message":"206","line":208,"column":31,"nodeType":"173","messageId":"207","endLine":208,"endColumn":33},{"ruleId":"171","severity":1,"message":"172","line":243,"column":43,"nodeType":"173","messageId":"174","endLine":243,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":275,"column":61,"nodeType":"173","messageId":"174","endLine":275,"endColumn":63},{"ruleId":"198","severity":1,"message":"208","line":280,"column":40,"nodeType":"200","messageId":"201","endLine":280,"endColumn":42},{"ruleId":"171","severity":1,"message":"172","line":297,"column":63,"nodeType":"173","messageId":"174","endLine":297,"endColumn":65},{"ruleId":"171","severity":1,"message":"172","line":320,"column":49,"nodeType":"173","messageId":"174","endLine":320,"endColumn":51},{"ruleId":"202","severity":1,"message":"203","line":324,"column":4,"nodeType":"204","messageId":"205","endLine":398,"endColumn":5},{"ruleId":"198","severity":1,"message":"208","line":335,"column":17,"nodeType":"200","messageId":"201","endLine":335,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":406,"column":54,"nodeType":"173","messageId":"174","endLine":406,"endColumn":56},{"ruleId":"161","severity":1,"message":"209","line":3,"column":9,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"161","severity":1,"message":"210","line":3,"column":31,"nodeType":"163","messageId":"164","endLine":3,"endColumn":38},{"ruleId":"175","severity":1,"message":"211","line":35,"column":5,"nodeType":"177","endLine":35,"endColumn":41,"suggestions":"212"},{"ruleId":"161","severity":1,"message":"209","line":3,"column":9,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"161","severity":1,"message":"210","line":3,"column":16,"nodeType":"163","messageId":"164","endLine":3,"endColumn":23},{"ruleId":"161","severity":1,"message":"213","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"209","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Welcome' is defined but never used.","'Controller' is defined but never used.","'Action' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'playNotify' and 'store.app'. Either include them or remove the dependency array.","ArrayExpression",["214"],"'useEffect' is defined but never used.","'RightOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'param.controller' and 'store.router'. Either include them or remove the dependency array.",["215"],"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"React Hook useEffect has a missing dependency: 'store.router'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'onKeyDown'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has missing dependencies: 'loadAction' and 'param'. Either include them or remove the dependency array.",["220"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'runInAction' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '===' and instead saw '=='.","'Input' is defined but never used.","'message' is defined but never used.","React Hook useEffect has a missing dependency: 'store.request.url'. Either include it or remove the dependency array.",["221"],"'Radio' is defined but never used.",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [playNotify, store.app, store.app.notification]",{"range":"234","text":"235"},"Update the dependencies array to be: [location, param.controller, store.router]",{"range":"236","text":"237"},"Update the dependencies array to be: [location, store.router]",{"range":"238","text":"239"},"Update the dependencies array to be: [onKeyDown]",{"range":"240","text":"241"},"Update the dependencies array to be: [loadAction, location, param]",{"range":"242","text":"243"},"Update the dependencies array to be: [langState, store.request.serialize, store.request.url]",{"range":"244","text":"245"},[734,758],"[playNotify, store.app, store.app.notification]",[928,938],"[location, param.controller, store.router]",[428,438],"[location, store.router]",[1264,1266],"[onKeyDown]",[1879,1889],"[loadAction, location, param]",[857,893],"[langState, store.request.serialize, store.request.url]"]